<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.mapper.EmpMapper">
<!--
resultMap:设置自定义映射关系
ID；设置唯一标识
type;设置映射关系中的唯一实体类型
子标签：
    ID：s设置普通字段的映射关系
    result：设置普通字段的映射关系
    属性：
    property：设置映射关系的属性名，必须是type属性所设置的实体类型中的属性名
    column:设置映射关系中的字段名，必须是sql语句查询出的字段名
-->
    <resultMap id="empResultMap" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
    </resultMap>

    <!--    List<Emp> getAllEmp();-->
    <select id="getAllEmp" resultMap="empResultMap">
        select * from t_emp
    </select>


<!--    List<Emp> getAllEmp();-->
    <select id="getAllEmp1" resultType="Emp">
        <!--select eid, emp_name empName,age,sex,email from t_emp-->
    select * from t_emp
    </select>


<!--    处理多对一映射关系方式一：级联属性赋值-->
    <resultMap id="empAndDeptResultMapOne" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
        <result property="dept.did" column="did"></result>
        <result property="dept.deptName" column="dept_name"></result>
    </resultMap>
    <!--    处理多对一映射关系方式二：association属性赋值-->
    <resultMap id="empAndDeptResultMapTwo" type="Emp">
        <id property="eid" column="eid"></id>
        <result property="empName" column="emp_name"></result>
        <result property="age" column="age"></result>
        <result property="sex" column="sex"></result>
        <result property="email" column="email"></result>
<!--
association：处理多对一的映射关系
property:需要处理多对的映射关系的属性名
javaType:改属性的类型
-->
        <association property="dept" javaType="Dept">
            <id property="did" column="did"></id>
            <result property="deptName" column="dept_name"></result>
        </association>
    </resultMap>
    
<!-- Emp getEmpAndDept(@Param("eid") Integer eid);-->
<select id="getEmpAndDept" resultMap="empAndDeptResultMapTwo">
    select  * from t_emp left join t_dept on t_emp.did=t_dept.did where t_emp.eid=#{eid}
</select>

<resultMap id="empAndDeptByStepOne" type="Emp">
    <id property="eid" column="eid"></id>
    <result property="empName" column="emp_name"></result>
    <result property="age" column="age"></result>
    <result property="sex" column="sex"></result>
    <result property="email" column="email"></result>
<!--
    select：设置分布查询的sql的唯一标识（namespace.SQlId 或mapper接口的全类名.方法名）
    column：设置分布查询的条件
    fetchType:当开启了全局的延迟加载之后，通过此属性手动控制延迟加载到效果
     fetchType=lazy|leager  lazy:表示延迟加载  eagger表示立即加载
-->
    <association property="dept"
                 select="com.atguigu.mybatis.mapper.DeptMapper.getEmpAndDeptByStepTwo"
                 column="did"
                 fetchType="eager">

    </association>
</resultMap>
<!--    Emp getEmpAndDeptByStepOne(@Param("eid") Integer eid);-->
    <select id="getEmpAndDeptByStepOne" resultMap="empAndDeptByStepOne">
        select * from t_emp where eid =#{eid}
    </select>


<!--    List<Emp> getDeptAndEmpByStepTwo(@Param("did") Integer did)-->
    <select id="getDeptAndEmpByStepTwo" resultType="Emp">
        select * from t_emp where did=#{did}
    </select>

</mapper>